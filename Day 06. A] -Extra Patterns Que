Extra patterns Question for Practice 
code link:- https://onecompiler.com/java/42eu8m32q


import java.util.*;

public class Main {
    public static void main(String[] args) {
      // 1] print square hollow patterns 
      // ******
      // *    *
      // *    *
      // *    *
      // *    *
      // ******


      int n = 6;
      for(int i=1; i<=n; i++) {
        for(int j=1; j<=n; j++) {
          if (i==1 || i==n || j==1 || j==n) {
          System.out.print("*");
          } else {
            System.out.print(" ");
          }
        }
        System.out.println();
      }
      
      // 2] print Number Triangle
      //   1 
      //  2 2 
      // 3 3 3 
      //4 4 4 4

      int n= 4;
      
      for(int i=1; i<=n; i++) {
        
        // spaces 
        for(int j=1; j<=n-i; j++) {
          System.out.print(" ");
        }
        
        // for number 
        for(int j=1; j<=i; j++) {
          System.out.print(i + " ");
        }
        System.out.println();
      }
     
      // 3] number increasing pyramid 
    // 1 
    // 1 2 
    // 1 2 3 
    // 1 2 3 4 
    
    int n=4;
    for(int i=1; i<=n; i++) {
      for(int j=1; j<=i; j++) {
        System.out.print(j + " ");
      }
      System.out.println();
    }

     // 4] Number increasing reverse pyramid 
      // 1 2 3 4 
      // 1 2 3 
      // 1 2 
      // 1 

      int n=4;
      for(int i=n; i>=1; i--) {
        for(int j=1; j<=i; j++) {
          System.out.print(j + " ");
        }
        System.out.println();
      }


      // 5] Number changing pyramid 
      // 1 
      // 2 3 
      // 4 5 6 
      // 7 8 9 10 
      
      int n=4; 
      int sum = 1;
      for(int i=1; i<=n; i++) {
        for(int j=1; j<=i; j++) {
          System.out.print(sum + " ");
          sum++;
        }
        System.out.println();
      }

      // 6] Zero-One Triangle 
      // 1 
      // 0 1 
      // 1 0 1 
      // 0 1 0 1   
      
      int n=4;
      for(int i=1; i<=n; i++) {
        for(int j=1; j<=i; j++) {
          if( (i+j) % 2 == 0 ) {
          System.out.print("1 ");
          } else {
            System.out.print("0 ");
          }
        }
        System.out.println();
      }
      

      // 7] print Palindrome Triangular 
      //    1
      //   212
      //  32123
      // 4321234

      int n = 4;
      for(int i=1; i<=n; i++) {
        //1st part 
        // spaces
        for(int j=1; j<=n-i; j++) {
          System.out.print(" ");
        }
        
        // for number 
        for(int j=i; j>=1; j--) {
          System.out.print(j);
        }
        for(int j=2; j<=i; j++) {
          System.out.print(j);
        }
        System.out.println();
      }


       // 8] print rhombus pattern 
      // *****
      //  *****
      //   *****
      //    *****
      //     *****
      
      int n=5;
      for(int i=1; i<=n; i++) {
        // for spaces 
        for(int j=1; j<=i-1; j++) {
          System.out.print(" ");
        }
        for(int j=1; j<=n; j++) {
          System.out.print("*");
        }
        System.out.println();
      }
      
       // 9] Diamond Pattern 
//         * 
      //  * * 
      // * * * 
      //* * * * 
      // * * * 
      //  * * 
      //   * 
      
      int n=4;
      // first half
      for(int i=1; i<=n; i++) {
        // spaces 
        for(int j=1; j<=n-i; j++) {
          System.out.print(" ");
        }
        
        for(int j=1; j<=i; j++) {
          System.out.print("* ");
        }
        
        System.out.println();
      }
      
      // second half
      for(int i=n-1; i>=1; i--) {
        // spaces 
        for(int j=1; j<=n-i; j++) {
          System.out.print(" ");
        }
        
        for(int j=1; j<=i; j++) {
          System.out.print("* ");
        }
        
        System.out.println();
      }

       // // 10] Butterfly Pattern
      // // *      *
      // // **    **
      // // ***  ***
      // // ********
      // // ***  ***
      // // **    **
      // // *      *
      
      // int n=4; 
      
      // // 1st half 
      // for (int i=1; i<=n; i++) {
        
      //   // 1st part star
      //   for(int j=1; j<=i; j++) {
      //     System.out.print("*");
      //   }
      //   // spaces
        
      //   for(int j=1; j<=2*(n-i); j++)  {
      //     System.out.print(" ");
      //   }
        
      //   // right part 
      //   for(int j=1; j<=i; j++) {
      //     System.out.print("*");
      //   }
      //   System.out.println();
      // }
      
      // // 2nd half 
      // for (int i=n-1; i>=1; i--) {
        
      //   // 1st part star
      //   for(int j=1; j<=i; j++) {
      //     System.out.print("*");
      //   }
      //   // spaces
        
      //   for(int j=1; j<=2*(n-i); j++)  {
      //     System.out.print(" ");
      //   }
      //   for(int j=1; j<=i; j++) {
      //     System.out.print("*");
      //   }
      //   System.out.println();
      // }
      
      
      // // 11] Square fill pattern 
      // // * * * * * * 
      // // * * * * * * 
      // // * * * * * * 
      // // * * * * * * 
      // // * * * * * * 
      // // * * * * * * 
      
      
      
      // int n=6;
      
      // // outer loop 
      // for(int i=1; i<=n; i++) {
      //   // inner loop 
      //   for(int j=1; j<=n; j++) {
      //     System.out.print("* ");
      //   }
      //   System.out.println();
      // }
      
      
      // // 12] Right half pyramid
      
      // // * 
      // // * * 
      // // * * * 
      // // * * * * 
      // // * * * * * 
      
      // int n=5;
      
      // // outer loop 
      // for(int i=1; i<=n; i++) {
      //   // inner loop 
      //   for(int j=1; j<=i; j++) {
      //     System.out.print("* ");
      //   }
      //   System.out.println();
      // }
      
      
      // // 13] Reverse Right half pyramid
      // // * * * * * 
      // // * * * * 
      // // * * * 
      // // * * 
      // // * 
      
      // int n=5;
      
      // for(int i=n; i>=1; i--) {
      //   for(int j=1; j<=i; j++) {
      //     System.out.print("* ");
      //   }
      //   System.out.println();
      // }
      
      
      // 14] left half pyramid
        //     *
        //    **
        //   ***
        //  ****
        // *****
      
      // int n=5;
      
      // for(int i=1; i<=n; i++) {
        
      //   for(int j=1; j<=n-i; j++) {
      //     System.out.print(" ");
      //   }
      //   for(int j=1; j<=i; j++) {
      //     System.out.print("*");
      //   }
      //   System.out.println();
      // }
      
      
      // 15] reverse half pyramid
      // *****
      //  ****
      //   ***
      //    **
      //     *
      
      // int n=5;
      
      // for(int i=1; i<=n; i++) {
      //   // for spaces 
      //   for(int j=1; j<=i-1; j++) {
      //     System.out.print(" ");
      //   }
      //   for(int j=1; j<=n-(i-1); j++) {
      //     System.out.print("*");
      //   }
      //   System.out.println();
      // }
      
      // // 16] K pattern
      // // ****
      // // ***
      // // **
      // // *
      // // **
      // // ***
      // // ****
      
      // int n=5;
      
      
      // // outer loop 
      // for(int i=1; i<=n; i++) {
      //   for(int j=0; j<=n-i; j++) {
      //     System.out.print("*");
      //   }
      //   System.out.println();
      // }
      // for(int i=1; i<=n-1; i++) {
      //   for(int j=0; j<=i; j++) {
      //     System.out.print("*");
      //   }
      //   System.out.println();
      // }
  
      
      // 17] Print Triangle Star pattern
      //    * 
      //   * * 
      //  * * * 
      // * * * * 
      // * * * * * 
      
      // int n=5;
      // for(int i=1; i<=n; i++) {
        
      //   // for spaces
      //   for(int j=1; j<=n-i; j++) {
      //     System.out.print(" ");
      //   }
        
      //   // for star 
      //   for(int j=1; j<=i; j++) {
      //     System.out.print("* ");
      //   }
      //   System.out.println();
      // }
      
      
      // 18] Reverse Number Triangle pattern
      // 1 2 3 4 
      //  2 3 4 
      //   3 4 
      //    4 
      
      // int n=4;
      
      // // outer loop 
      // for(int i=1; i<=n; i++) {
        
      //   // for spaces
      //   for(int j=1; j<=i-1; j++) {
      //     System.out.print(" ");
      //   }
        
      //   // for Number
        
      //   for(int j=i; j<=n; j++) {
      //     System.out.print(j + " ");
      //   }
      //   System.out.println();
      // }
      
      
      // // 19] Mirror image Triangle pattern
      // // 1 2 3 4 
      // //  2 3 4 
      // //   3 4 
      // //    4 
      // //   3 4 
      // //  2 3 4 
      // // 1 2 3 4 
      
      // int n=4;
      
      // // 1st part outer loop 
      // for(int i=1; i<=n; i++) {
      //   // inner loop 
      //   // for spaces 
      //   for (int j=1; j<=i-1; j++) {
      //     System.out.print(" ");
      //   }
        
      //   // for Number 
      //   for(int j=i; j<=n; j++) {
      //     System.out.print(j + " ");
      //   }
      //   System.out.println();
      // }
      
      // // 2nd part outer loop 
      // for(int i=n-1; i>=1; i--) {
      //   // inner loop 
      //   // for spaces 
      //   for (int j=1; j<=i-1; j++) {
      //     System.out.print(" ");
      //   }
        
      //   // for Number 
      //   for(int j=i; j<=n; j++) {
      //     System.out.print(j + " ");
      //   }
      //   System.out.println();
      // }

      // 20] hollow Triangle pattern
          // *
      //    * *
      //   *   *
      //  *     *
      // *********
      
      int n=5;
      
      // outer loop 
      for(int i=1; i<=n; i++) {
        // inner loop 
        // spaces
        for(int j=1; j<=n-i; j++) {
          System.out.print(" ");
        }
        
        // 1st part no 
        for(int j=1; j<=i; j++) {
          if( i==n || j==1) {
            System.out.print("*");
          } else {
          System.out.print(" ");
          }  
        }
        //2nd part no
        for( int j=2; j<=i;j++) {
          if( i==n || j==i) {
            System.out.print("*");
          } else {
          System.out.print(" ");
          }
        }
        System.out.println();
      }
      
      21] Pascal's Triangle

        1 
        1 1 
        1 2 1 
        1 3 3 1 
        1 4 6 4 1 

            public class Main {
                public static void main(String[] args) {
                 //pascals triangel
                 
                 int n = 5;
                 int arr[][] = new int[n][n];
                 
                 for(int i=0; i<n; i++) {
                   for(int j=0; j<=i; j++) {
                     if(j == 0 || i==j) {
                       arr[i][j] = 1;
                     } else {
                       arr[i][j] = arr[i-1][j-1]+arr[i-1][j];
                     }
                   System.out.print(arr[i][j] + " ");
                   }
                 System.out.println();
                 }
              }
            }
  }
}
