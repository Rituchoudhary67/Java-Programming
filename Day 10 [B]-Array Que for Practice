code link : https://onecompiler.com/challenges/3xvdvhe77/arrays-basics-set-1

1] Take 10 elements in an array and find the sum of all elements.

import java.util.*;

public class Main {
    public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      int size = 10;
      int count = 0;
      int number[] = new int[size];
      
      // input 
      for(int i=0; i<size; i++) {
        number[i] = sc.nextInt();
      }
      // output
      for(int i=0; i<size; i++) {
        count = count + number[i];
      }
        System.out.println(count);
      
      
  }
}


2] Take an array of 10 integers, print the number of array elements that are divisible by 5

import java.util.*;

public class Main {
    public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      int size = 10;
      int count =0;
      int num[] = new int[size]; 
       
      // input 
      for(int i=0; i<size; i++) {
        num[i] = sc.nextInt();
      }
      
      // output
      for(int i=0; i<size; i++) {
        if(num[i] % 5 == 0) {
          count++;
        }
      }
        System.out.println(count);
  }
}

3] Take 10 elements in an array (arr) and find the second biggest number.
Ex :- Input :  1,5,3,8,2
      Output : 5
code link :- https://onecompiler.com/challenges/3xvdvhe77/arrays-basics-set-1

import java.util.*;

public class Main {
    public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      int size = 10;
      int myArr[] = new int[size];
     
      int secondBig = 0;
      // input 
      for(int i=0; i<size; i++) {
        myArr[i] = sc.nextInt();
      }
      
      Arrays.sort(myArr);
      //output 
      for(int i=0; i<size; i++) {
        
          secondBig = myArr[size - 2]; 
          
        }
        System.out.println(secondBig);
  }
}

4] Take n elements into an array and print the odd numbers and even numbers seperately in two lines.
   Ex:- Input : n = 4  ---> {1,2,3,4}
        Output : odd :1,3
                 Even : 2,4

import java.util.*;

public class Main {
    public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      int n = sc.nextInt();
      int myArr[] = new int[n];
      
      //input
      for(int i=0; i<n; i++) {
        myArr[i] = sc.nextInt();
      }
      
      //output of odd Number
      for(int i=0; i<n; i++) {
        if(myArr[i] % 2 != 0) {
          System.out.print(myArr[i] + ",");
        }
      }
      System.out.println();
      //output of even Number
      for(int i=0; i<n; i++) {
        if(myArr[i] % 2 == 0) {
          System.out.print(myArr[i] + ",");
        }
      }
      
    
      
  }
}

5] Take two arrays A,B of same size, multiply corresponding elements, store them in a third array and print it.
Ex :- Input : 1 2 3 4
              5 6 7 2
    Output :  5 12 21 8

import java.util.*;

public class Main {
    public static void main(String[] args) {
     Scanner sc = new Scanner(System.in);
     int size = sc.nextInt();
     
     int arrA[] = new int[size];
     int arrB[] = new int[size];
     int arrAB[] = new int[size];
     
     //input for arrA 
     for(int i=0; i<size;i++) {
       arrA[i] = sc.nextInt();
     }
     
    // input for arrB
    for(int i=0; i<size;i++) {
       arrB[i] = sc.nextInt();
    }
     
    // //this is for my own understanding
    // //output for arrA
    // for(int i=0; i<size;i++) {
    //   System.out.print(arrA[i] + " ");
    // }
    // System.out.println();
     
    // //output for arrB
    // for(int i=0; i<size;i++) {
    //   System.out.print(arrB[i] + " ");
    // }
    
    // System.out.println();
    
    //output for arrAB
    for(int i=0; i<1;i++) {
      arrAB[i] = arrA[i] * arrB[i];
      System.out.print(arrAB[0]);
    }
      for(int j=1; j<size;j++) {
        arrAB[j] = arrA[j] * arrB[j];
        System.out.print("," + arrAB[j]);
      }
    
  }
}

6] Take two arrays, merger them and store it as a third array. Print it out.
Ex : Input : 1 2 3 4
             5 6 7 8
    Output : 1 2 3 4 5 6 7 8

import java.util.*;

public class Main {
    public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      int n = sc.nextInt();
      int m = sc.nextInt();
      int arrA[] = new int[n];
      int arrB[] = new int[m];
      
      int arrAB[] = new int[n+m];
      
      // input 
      // for arrA
      for(int i=0; i<n; i++) {
        arrA[i] = sc.nextInt();
      }
      
      // for arrB
      for(int i=0; i<m; i++) {
        arrB[i] = sc.nextInt();
      }
      
      
      // output
      // for arrA
      for(int i=0; i<n; i++) {
        arrAB[i] = arrA[i];
      }
      //for arrB
      for(int i=0; i<m; i++) {
        arrAB[n+i] = arrB[i]; 
      }
      
      //for arrAB
      for(int i=0; i<n+m; i++) {
        if(i > 0) {
          System.out.print("," + arrAB[i]);
        } else {
        System.out.print(arrAB[0]);
        }
          
        
      }
    }
}

Method 2 : Merge arrays Using arraycopy():
// Syntax: System.arraycopy(source_array,Starting_Pos_source,destination_array,Starting_pos_dest,length);
      
      // copy arrA elements into arrAB
      System.arraycopy(arrA,0,arrAB,0,n);
      
      // copy arrB elements into arrAB
      System.arraycopy(arrB,0,arrAB,n,m);
      
      //printing arrAB
       System.out.print(Arrays.toString(arrAB));

7] Take an array with several 0s in it, push all the 0s to the start of the array and print the array.

Solution :
import java.util.*;

public class Main {
    public static void main(String[] args) {
     Scanner sc = new Scanner(System.in);
     int n = sc.nextInt();
     int arr[] = new int[n];
     int temp = 0;
     //input of an array
     for(int i=0; i<n; i++) {
       arr[i] = sc.nextInt();
     }
     
     //output of an array
    for(int i=0; i<n; i++) {
      // System.out.println(arr[i]);
      if(arr[i] == 0) {
        System.out.println(arr[i]);
      }
    }
     
    for(int i=0; i<n; i++) {
      if(arr[i] !=0) {
        System.out.println(arr[i]);
      }
    }
    
  }
}

8] Insert a given integer x in the middle of a given array arr.
Input:
First line of input contains the integer to be inserted.
Second line contains the length N of array arr.
Next N lines of the input contains the elements of the array in which x is to be inserted at index len/2 
if len is even and (len-1/2) if len is odd.
Output:
Array arr after x is inserted at the index mentioned.

Example:
1) Input: 5
3 1 2 4
Output:
1 5 2 4

Explanation:
Case 1:
len = 3. Hence x=5 is inserted at index len-1/2 = 1

2] Input: 10
4 1 2 3 4
Output:
1 2 10 3 4

Case 2:
len = 2. Hence x=10 is inserted at index len/2 = 1

Solution :
import java.util.*;

public class Main {
    public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      int x = sc.nextInt();  // input contains the integer to be inserted.
      int n = sc.nextInt();  // size of an array
      int arr[] = new int[n];
      int pos = 0;
      
      //input of an array
      for(int i=0; i<n; i++) {
        arr[i] = sc.nextInt();
      }
      
      //finding the value of pos weather it is even or odd 
        if(n % 2 == 0) {
           pos = n / 2;
        } else {
           pos = (n-1)/2;
        }
        // System.out.println(pos);
      
      //output of an array
      for(int i=n-1; i>=pos; i--) {
       
        
      }
      
     
      
  }
}
